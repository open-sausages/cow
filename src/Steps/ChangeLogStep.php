<?php

namespace SilverStripe\Cow\Steps;

use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

/**
 * Creates a new changelog
 */
abstract class ChangeLogStep extends ModuleStep
{
    /**
     * Below this line, any text will be automatically regenerated
     *
     * @var string
     */
    protected $autogeneratedDelimeter = "<!--- Changes below this line will be automatically regenerated -->";
    
    /**
     * Get full path to this changelog
     *
     * @return string
     */
    abstract protected function getChangelogPath();

    /**
     * Save output to disk
     *
     * @param OutputInterface $output
     * @param string $content
     * @param string $path
     */
    protected function writeChangeLog(OutputInterface $output, $content, $path)
    {
        $header = $this->getFileHeader($output, $path);
        file_put_contents($path, $header.$content);
    }

    /**
     * Get header component to put before the changelog content
     */
    protected function getFileHeader(OutputInterface $output, $path)
    {
        // Generate new header if no file exists
        if (!file_exists($path)) {
            $this->log($output, "Writing changelog to <info>$path</info>");
            return "# " . $this->getChangelogTitle($output) . "\n\n" . $this->autogeneratedDelimeter;
        }

        // Given an existing file, attempt to regenerate autogenerated component
        $this->log($output, "<info>$path</info> already exists; Merging changes");
        $content = file_get_contents($path);
        $position = stripos($content, $this->autogeneratedDelimeter);
        if ($position === false) {
            $this->log($output, "Warning: autogeneration delimiter could not be found in this file. Content will be appended instead", "error");
        } else {
            $content = substr($content, 0, $position);
        }
        return $content . $this->autogeneratedDelimeter;
    }
    
    abstract protected function getChangelogTitle(OutputInterface $output);

    public function getStepName()
    {
        return 'changelog';
    }
}
